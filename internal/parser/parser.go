/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: parser.i

package parser

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef _gostring_ swig_type_14;
extern void _wrap_Swig_free_parser_6ffc9200ef2d0bf8(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_parser_6ffc9200ef2d0bf8(swig_intgo arg1);
extern uintptr_t _wrap_new_StringMap__SWIG_0_parser_6ffc9200ef2d0bf8(void);
extern uintptr_t _wrap_new_StringMap__SWIG_1_parser_6ffc9200ef2d0bf8(uintptr_t arg1);
extern swig_intgo _wrap_StringMap_size_parser_6ffc9200ef2d0bf8(uintptr_t arg1);
extern _Bool _wrap_StringMap_empty_parser_6ffc9200ef2d0bf8(uintptr_t arg1);
extern void _wrap_StringMap_clear_parser_6ffc9200ef2d0bf8(uintptr_t arg1);
extern swig_type_1 _wrap_StringMap_get_parser_6ffc9200ef2d0bf8(uintptr_t arg1, swig_type_2 arg2);
extern void _wrap_StringMap_set_parser_6ffc9200ef2d0bf8(uintptr_t arg1, swig_type_3 arg2, swig_type_4 arg3);
extern void _wrap_StringMap_del_parser_6ffc9200ef2d0bf8(uintptr_t arg1, swig_type_5 arg2);
extern _Bool _wrap_StringMap_has_key_parser_6ffc9200ef2d0bf8(uintptr_t arg1, swig_type_6 arg2);
extern void _wrap_delete_StringMap_parser_6ffc9200ef2d0bf8(uintptr_t arg1);
extern void _wrap_ParseResult_tag_set_parser_6ffc9200ef2d0bf8(uintptr_t arg1, swig_type_7 arg2);
extern swig_type_8 _wrap_ParseResult_tag_get_parser_6ffc9200ef2d0bf8(uintptr_t arg1);
extern void _wrap_ParseResult_command_set_parser_6ffc9200ef2d0bf8(uintptr_t arg1, swig_type_9 arg2);
extern swig_type_10 _wrap_ParseResult_command_get_parser_6ffc9200ef2d0bf8(uintptr_t arg1);
extern void _wrap_ParseResult_error_set_parser_6ffc9200ef2d0bf8(uintptr_t arg1, swig_type_11 arg2);
extern swig_type_12 _wrap_ParseResult_error_get_parser_6ffc9200ef2d0bf8(uintptr_t arg1);
extern uintptr_t _wrap_new_ParseResult_parser_6ffc9200ef2d0bf8(void);
extern void _wrap_delete_ParseResult_parser_6ffc9200ef2d0bf8(uintptr_t arg1);
extern uintptr_t _wrap_parse_parser_6ffc9200ef2d0bf8(swig_type_13 arg1, uintptr_t arg2, swig_type_14 arg3);
#undef intgo
*/
import "C"

import (
	_ "runtime/cgo"
	"sync"
	"unsafe"
)

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

type swig_gostring struct {
	p uintptr
	n int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_parser_6ffc9200ef2d0bf8(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrStringMap uintptr

func (p SwigcptrStringMap) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrStringMap) SwigIsStringMap() {
}

func NewStringMap__SWIG_0() (_swig_ret StringMap) {
	var swig_r StringMap
	swig_r = (StringMap)(SwigcptrStringMap(C._wrap_new_StringMap__SWIG_0_parser_6ffc9200ef2d0bf8()))
	return swig_r
}

func NewStringMap__SWIG_1(arg1 StringMap) (_swig_ret StringMap) {
	var swig_r StringMap
	_swig_i_0 := arg1.Swigcptr()
	swig_r = (StringMap)(SwigcptrStringMap(C._wrap_new_StringMap__SWIG_1_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewStringMap(a ...interface{}) StringMap {
	argc := len(a)
	if argc == 0 {
		return NewStringMap__SWIG_0()
	}
	if argc == 1 {
		return NewStringMap__SWIG_1(a[0].(StringMap))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrStringMap) Size() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_StringMap_size_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringMap) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_StringMap_empty_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrStringMap) Clear() {
	_swig_i_0 := arg1
	C._wrap_StringMap_clear_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrStringMap) Get(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_StringMap_get_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrStringMap) Set(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_StringMap_set_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_4)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrStringMap) Del(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_StringMap_del_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrStringMap) Has_key(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_StringMap_has_key_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0), *(*C.swig_type_6)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DeleteStringMap(arg1 StringMap) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_StringMap_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0))
}

type StringMap interface {
	Swigcptr() uintptr
	SwigIsStringMap()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 string) (_swig_ret string)
	Set(arg2 string, arg3 string)
	Del(arg2 string)
	Has_key(arg2 string) (_swig_ret bool)
}

type SwigcptrParseResult uintptr

func (p SwigcptrParseResult) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrParseResult) SwigIsParseResult() {
}

func (arg1 SwigcptrParseResult) SetTag(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ParseResult_tag_set_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0), *(*C.swig_type_7)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrParseResult) GetTag() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ParseResult_tag_get_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrParseResult) SetCommand(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ParseResult_command_set_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0), *(*C.swig_type_9)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrParseResult) GetCommand() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ParseResult_command_get_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrParseResult) SetError(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ParseResult_error_set_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0), *(*C.swig_type_11)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrParseResult) GetError() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ParseResult_error_get_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func NewParseResult() (_swig_ret ParseResult) {
	var swig_r ParseResult
	swig_r = (ParseResult)(SwigcptrParseResult(C._wrap_new_ParseResult_parser_6ffc9200ef2d0bf8()))
	return swig_r
}

func DeleteParseResult(arg1 ParseResult) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ParseResult_parser_6ffc9200ef2d0bf8(C.uintptr_t(_swig_i_0))
}

type ParseResult interface {
	Swigcptr() uintptr
	SwigIsParseResult()
	SetTag(arg2 string)
	GetTag() (_swig_ret string)
	SetCommand(arg2 string)
	GetCommand() (_swig_ret string)
	SetError(arg2 string)
	GetError() (_swig_ret string)
}

func Parse(arg1 string, arg2 StringMap, arg3 string) (_swig_ret ParseResult) {
	var swig_r ParseResult
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (ParseResult)(SwigcptrParseResult(C._wrap_parse_parser_6ffc9200ef2d0bf8(*(*C.swig_type_13)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), *(*C.swig_type_14)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}
