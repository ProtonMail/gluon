// Code generated by entc, DO NOT EDIT.

package message

const (
	// Label holds the string label denoting the message type in the database.
	Label = "message"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldMessageID holds the string denoting the messageid field in the database.
	FieldMessageID = "message_id"
	// FieldInternalID holds the string denoting the internalid field in the database.
	FieldInternalID = "internal_id"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"
	// FieldSize holds the string denoting the size field in the database.
	FieldSize = "size"
	// FieldBody holds the string denoting the body field in the database.
	FieldBody = "body"
	// FieldBodyStructure holds the string denoting the bodystructure field in the database.
	FieldBodyStructure = "body_structure"
	// FieldEnvelope holds the string denoting the envelope field in the database.
	FieldEnvelope = "envelope"
	// EdgeFlags holds the string denoting the flags edge name in mutations.
	EdgeFlags = "flags"
	// EdgeUIDs holds the string denoting the uids edge name in mutations.
	EdgeUIDs = "UIDs"
	// Table holds the table name of the message in the database.
	Table = "messages"
	// FlagsTable is the table that holds the flags relation/edge.
	FlagsTable = "message_flags"
	// FlagsInverseTable is the table name for the MessageFlag entity.
	// It exists in this package in order to avoid circular dependency with the "messageflag" package.
	FlagsInverseTable = "message_flags"
	// FlagsColumn is the table column denoting the flags relation/edge.
	FlagsColumn = "message_flags"
	// UIDsTable is the table that holds the UIDs relation/edge.
	UIDsTable = "ui_ds"
	// UIDsInverseTable is the table name for the UID entity.
	// It exists in this package in order to avoid circular dependency with the "uid" package.
	UIDsInverseTable = "ui_ds"
	// UIDsColumn is the table column denoting the UIDs relation/edge.
	UIDsColumn = "uid_message"
)

// Columns holds all SQL columns for message fields.
var Columns = []string{
	FieldID,
	FieldMessageID,
	FieldInternalID,
	FieldDate,
	FieldSize,
	FieldBody,
	FieldBodyStructure,
	FieldEnvelope,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
