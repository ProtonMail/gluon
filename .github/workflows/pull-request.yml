name: Build and Test

on:
  pull_request:
    branches: dev

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.changed.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - id: changed
        uses: tj-actions/changed-files@v21
        with:
          files: internal/parser
          files_ignore: |
            *.a
            *.lib

      - name: List change detection output
        run: |
          echo "Files changed?: ${{ steps.changed.outputs.any_changed }}"

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-12, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: check
    steps:
      - name: Get sources
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: List change detection output
        run: |
          echo "Files changed?: ${{ needs.check.outputs.changed }}"

      - name: Build parser if modified
        if: needs.check.outputs.changed == 'true'
        uses: ./.github/actions/build-parser
        with:
          artifact-name: ${{ matrix.os }}-libs

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-12, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: [build, check]
    steps:
      - name: Get sources
        uses: actions/checkout@v3

      - name: Set up Go 1.18
        uses: actions/setup-go@v3
        with:
          go-version: '1.18'

      - name: Remove old static libs if modified
        if: needs.check.outputs.changed  == 'true'
        run: |
          rm -r internal/parser/lib

      - name: Download new static libs if modified
        if: needs.check.outputs.changed == 'true'
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.os }}-libs
          path: internal/parser/lib

      - name: Run go vet
        run: go vet $(go list ./... | grep -v internal/parser)

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.0
          args: --timeout=180s
          skip-cache: true

      - name: Run tests
        run: go test -timeout 15m -v ./...

      - name: Run tests with race check
        if: runner.os != 'Windows'
        run: go test -race -v ./tests
